services:
  server-a:
    build:
      context: ./server-a
      dockerfile: Dockerfile
    env_file:
      - ./server-a/.env
    ports:
      - "8001:8000"
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  redis:
    image: "redis:7-alpine"
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  rabbitmq:
    image: "rabbitmq:3-management-alpine"
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: smsgw
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  server-b:
    build:
      context: ./server-b
      dockerfile: Dockerfile
    image: sms_gateway_server_b
    env_file:
      - ./server-b/.env
    ports:
      - "9000:9000"
    depends_on:
      - rabbitmq
      - postgres
    command: >-
      sh -c "python manage.py migrate && gunicorn --bind 0.0.0.0:9000 sms_gateway_project.wsgi:application"

  celery-worker-b:
    image: sms_gateway_server_b
    env_file:
      - ./server-b/.env
    command: >-
      sh -c "python manage.py migrate && celery -A sms_gateway_project worker -l info"
    depends_on:
      - rabbitmq
      - postgres

  celery-beat-b:
    image: sms_gateway_server_b
    env_file:
      - ./server-b/.env
    command: >-
      sh -c "python manage.py migrate && celery -A sms_gateway_project beat -l info"
    depends_on:
      - rabbitmq
      - postgres

