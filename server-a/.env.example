# ==========================================
# Server A Environment Configuration
# ==========================================

# -- Basic Application Settings --
# Name of the service, used in logs and heartbeats.
APP_NAME=sms-gateway-server-a
# Logging level (e.g., DEBUG, INFO, WARNING, ERROR).
LOG_LEVEL=INFO


# -- Redis Connection --
# The hostname 'redis' matches the service name in docker-compose.yml.
REDIS_URL=redis://redis:6379/0


# -- RabbitMQ Connection --
# These values are used to connect to the RabbitMQ message broker.
RABBITMQ_HOST=rabbitmq
RABBITMQ_PORT=5672
RABBITMQ_USER=guest
RABBITMQ_PASS=guest
RABBITMQ_VHOST=sms_pipeline_vhost
RABBITMQ_EXCHANGE=sms_gateway_exchange
RABBITMQ_ROUTING_KEY=sms_outbound_queue
RABBITMQ_HEARTBEAT_EXCHANGE=sms_gateway_heartbeat_exchange
RABBITMQ_HEARTBEAT_QUEUE=sms_heartbeat_queue


# -- Application Logic Settings --
# Time-to-live (in seconds) for idempotency keys. 86400 = 24 hours.
IDEMPOTENCY_TTL_SECONDS=86400
# Interval (in seconds) for sending heartbeat messages to RabbitMQ.
HEARTBEAT_INTERVAL_SECONDS=60
# Toggles the provider validation logic. Set to 'true' or 'false'.
PROVIDER_GATE_ENABLED=true
# The prefix used for Redis keys that store daily quota counts.
QUOTA_PREFIX=quota


# -- Initial Bootstrap Configuration --
# NOTE: These JSON strings are used ONLY for the initial startup of server-a.
# Once server-a connects to RabbitMQ, it will receive the latest state
# from server-b, which is the single source of truth.

# A sample client configuration. The key of the JSON object is the API Key.
CLIENT_CONFIG={"api_key_for_service_A": {"user_id": 1, "username": "bootstrap_user", "is_active": true, "daily_quota": 1000}}

# A sample providers configuration.
PROVIDERS_CONFIG={"ProviderA": {"is_active": true, "is_operational": true, "aliases": ["magfa"], "note": "Default Magfa provider"}}